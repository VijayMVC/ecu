Automatically generated by Mendeley Desktop 1.14
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Fiat1991,
abstract = {The paging problem is that of deciding which pages to keep in a memory of k pages in order to minimize the number of page faults. This paper introduces the marking algorithm, a simple randomized on-line algorithm for the paging problem, and gives a proof that its performance guarantee (competitive ratio) is O(log k). In contrast, no deterministic on-line algorithm can have a performance guarantee better than k.},
author = {Fiat, Amos and Karp, Richard and Luby, Mike and McGeoch, Lyle and Sleator, Daniel and Young, Neal E.},
doi = {10.1016/0196-6774(91)90041-V},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Fiat et al/Competitive Paging Algorithms/Fiat et al. - 1991 - Competitive Paging Algorithms.pdf:pdf},
journal = {Journal of Algorithms},
number = {4},
pages = {685--699},
title = {{Competitive Paging Algorithms}},
volume = {12},
year = {1991}
}
@article{Agrawal2009,
author = {Agrawal, Kunal and Bender, Michael A. and Fineman, Jeremy T.},
doi = {10.1007/s00224-008-9114-1},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Agrawal, Bender, Fineman/The worst page-replacement policy/Agrawal, Bender, Fineman - 2009 - The worst page-replacement policy.pdf:pdf},
isbn = {9783540729136},
issn = {14324350},
journal = {Theory of Computing Systems},
keywords = {Caching,Competitive analysis,Online algorithms,Page replacement},
number = {2},
pages = {175--185},
title = {{The worst page-replacement policy}},
volume = {44},
year = {2009}
}
@article{Lim2013,
author = {Lim, Geunsik and Member, Student and Min, Changwoo and Eom, Young Ik},
doi = {10.1109/TCE.2013.6689690},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Lim et al/Virtual Memory Partitioning for Enhancing Application Performance in Mobile Platforms/Lim et al. - 2013 - Virtual Memory Partitioning for Enhancing Application Performance in Mobile Platforms.pdf:pdf},
journal = {IEEE Transactions on Consumer Electronics},
number = {4},
pages = {786--794},
title = {{Virtual Memory Partitioning for Enhancing Application Performance in Mobile Platforms}},
volume = {59},
year = {2013}
}
@inproceedings{Denning1968,
abstract = {A particularly troublesome phenomenon, thrashing, may seriously interfere with the performance of paged memory systems, reducing computing giants (Multics, IBM System 360, and others not necessarily excepted) to computing dwarfs. The term thrashing denotes excessive overhead and severe performance degradation or collapse caused by too much paging. Thrashing inevitably turns a shortage of memory space into a surplus of processor time.},
address = {New York},
author = {Denning, Peter J.},
booktitle = {AFIPS Joint Computer Conferences, Proceedings of the December 9-11, 1968, fall joint computer conference, part I},
doi = {10.1145/1476589.1476705},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning/Thrashing its causes and prevention/Denning - 1968 - Thrashing its causes and prevention.pdf:pdf},
pages = {915--922},
publisher = {ACM},
title = {{Thrashing: its causes and prevention}},
year = {1968}
}
@article{Greenberg1981,
author = {Greenberg, Bob},
doi = {10.1145/1041583.1041589},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Greenberg/Microsoft memory management document/Greenberg - 1981 - Microsoft memory management document.pdf:pdf},
issn = {01635816},
journal = {ACM SIGPC Notes},
number = {1-2},
pages = {34--41},
title = {{Microsoft memory management document}},
volume = {4},
year = {1981}
}
@article{Alanko1983,
author = {Alanko, Timo O. and Verkamo, A. Inkeri},
doi = {10.1016/0167-7136(83)90150-6},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Alanko, Verkamo/Segmentation, paging and optimal page sizes in virtual memory/Alanko, Verkamo - 1983 - Segmentation, paging and optimal page sizes in virtual memory.pdf:pdf},
issn = {01677136},
journal = {Performance Evaluation},
keywords = {alanko was born in,finland,gram behaviour,he received the m,helsinki,in 1941,locality,page size,pro-,sc,segmentation,timo o,virtual memory},
number = {1},
pages = {13--33},
title = {{Segmentation, paging and optimal page sizes in virtual memory}},
volume = {3},
year = {1983}
}
@article{Xu2014,
author = {Xu, Guangxia and Lin, Fuyi and Xiao, Yunpeng},
doi = {10.1109/TCE.2014.6780923},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Xu, Lin, Xiao/CLRU A New Page Replacement Algorithm for NAND Flash-based Consumer Electronics/Xu, Lin, Xiao - 2014 - CLRU A New Page Replacement Algorithm for NAND Flash-based Consumer Electronics.pdf:pdf},
journal = {IEEE Transactions on Consumer Electronics},
number = {1},
pages = {38--44},
title = {{CLRU : A New Page Replacement Algorithm for NAND Flash-based Consumer Electronics}},
volume = {60},
year = {2014}
}
@inproceedings{Babaoglu1981,
address = {New York},
author = {Babaoglu, \"{O}zalp and Joy, William},
booktitle = {SOSP '81 Proceedings of the eighth ACM symposium on Operating systems principles},
doi = {10.1145/800216.806595},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Babaoglu, Joy/Converting a swap-based system to do paging in an architecture lacking page-referenced bits/Babaoglu, Joy - 1981 - Converting a swap-based system to do paging in an architecture lacking page-referenced bits.pdf:pdf},
isbn = {0-89791-062-1},
issn = {01635980},
number = {5},
pages = {78--86},
publisher = {ACM},
title = {{Converting a swap-based system to do paging in an architecture lacking page-referenced bits}},
volume = {15},
year = {1981}
}
@article{Milenkovic1990,
abstract = {This tutorial describes the current crop of commercial memory management units (MMUs) for 32-bit microprocessors. The discussion includes both complex- and reduced-instruction-set computers (CISCs and RISCs). The rationale, principles, and issues related to hardware support for memory management and virtual memory are reviewed. The design and features of high-end microprocessor MMUs are reviewed and compared with respect to a common set of criteria. Special attention is paid to Unix requirements and multiprocessor, multiple MMU considerations. The MMUs covered are Intel 80386, i486, and i860; Motorola's 68851 (MMU for the 68020), 68030, 68040, and 88200 (MMU for the 88000 series); the Fujitsu MB86920 (Sparc MMU); and the MIPS R2000/R3000},
author = {Milenkovic, M.},
doi = {10.1109/40.52948},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Milenkovic/Microprocessor memory management units/Milenkovic - 1990 - Microprocessor memory management units.pdf:pdf},
issn = {0272-1732},
journal = {IEEE Micro},
number = {2},
pages = {70--85},
title = {{Microprocessor memory management units}},
volume = {10},
year = {1990}
}
@article{Hofri1976,
abstract = {A multiprogramming computing system which utilizes a virtual memory operating system, with paging-on-demand, is defined in queueing-theoretic terms. The validity and possible uses of such a model are discussed. Several quantities and measures of effectiveness, such as paging time, total system response time, and memory requirements are computed. The discussion and analysis place emphasis on exact, computable results.},
author = {Hofri, M. and Yadin, M.},
doi = {10.1016/0020-0255(76)90020-7},
file = {:C$\backslash$:/Users/marty/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Hofri, Yadin - 1976 - Multiprogramming with virtual memory—a queueing model.pdf:pdf},
issn = {00200255},
journal = {Information Sciences},
month = jan,
number = {3},
pages = {187--221},
title = {{Multiprogramming with virtual memory—a queueing model}},
url = {http://www.sciencedirect.com/science/article/pii/0020025576900207},
volume = {11},
year = {1976}
}
@article{Itano1979,
author = {Itano, Kozo},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Itano/Reduction of page swaps on the two dimensional transforms in a paging environment/Itano - 1979 - Reduction of page swaps on the two dimensional transforms in a paging environment.pdf:pdf},
journal = {Information Processing Letters},
number = {3},
pages = {137--140},
title = {{Reduction of page swaps on the two dimensional transforms in a paging environment}},
volume = {9},
year = {1979}
}
@article{Rajaraman1979,
author = {Rajaraman, M. K. and Anderson, Robert O.},
doi = {10.1145/1041864.1041870},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Rajaraman, Anderson/Performance of a Virtual Memory - Some Experimental Results/Rajaraman, Anderson - 1979 - Performance of a Virtual Memory - Some Experimental Results.pdf:pdf},
journal = {ACM SIGMETRICS Performance Evaluation Review},
number = {4},
pages = {63--68},
title = {{Performance of a Virtual Memory - Some Experimental Results}},
volume = {8},
year = {1979}
}
@inproceedings{Flannery1974,
author = {Flannery, William D.},
booktitle = {ANSS '74: Proceedings of the 2nd symposium on Simulation of computer systems},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Flannery/Simulation of the working set model for virtual storage management/Flannery - 1974 - Simulation of the working set model for virtual storage management.pdf:pdf},
pages = {175--178},
title = {{Simulation of the working set model for virtual storage management}},
year = {1974}
}
@inproceedings{Rajwar2005,
abstract = {Writing concurrent programs is difficult because of the complexity of ensuring proper synchronization. Conventional lock-based synchronization suffers from well-known limitations, so researchers have considered nonblocking transactions as an alternative. Recent hardware proposals have demonstrated how transactions can achieve high performance while not suffering limitations of lock-based mechanisms. However, current hardware proposals require programmers to be aware of platform-specific resource limitations such as buffer sizes, scheduling quanta, as well as events such as page faults, and process migrations. If the transactional model is to gain wide acceptance, hardware support for transactions must be virtualized to hide these limitations in much the same way that virtual memory shields the programmer from platform-specific limitations of physical memory. This paper proposes virtual transactional memory (VTM), a user-transparent system that shields the programmer from various platform-specific resource limitations. VTM maintains the performance advantage of hardware transactions, incurs low overhead in time, and has modest costs in hardware support. While many system-level challenges remain, VTM takes a step toward making transactional models more widely acceptable.},
author = {Rajwar, Ravi and Herlihy, Maurice and Lai, Konrad},
booktitle = {ISCA '05 Proceedings of the 32nd annual international symposium on Computer Architecture},
doi = {10.1109/ISCA.2005.54},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Rajwar, Herlihy, Lai/Virtualizing Transactional Memory/Rajwar, Herlihy, Lai - 2005 - Virtualizing Transactional Memory.pdf:pdf},
isbn = {076952270X},
issn = {10636897},
pages = {494--505},
title = {{Virtualizing Transactional Memory}},
year = {2005}
}
@article{Denning1975,
author = {Denning, Peter J. and Graham, G. Scott},
doi = {10.1109/PROC.1975.9857},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning, Graham/Multiprogrammed Memory Management/Denning, Graham - 1975 - Multiprogrammed Memory Management.pdf:pdf},
journal = {Proceedings of the IEEE},
number = {6},
pages = {924--939},
title = {{Multiprogrammed Memory Management}},
volume = {63},
year = {1975}
}
@book{Toppo2013,
author = {Toppo, Naveen and Dewan, Hrishikesh},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Toppo, Dewan/Pointers in C A Hands on Approach/Toppo, Dewan - 2013 - Pointers in C A Hands on Approach.pdf:pdf},
isbn = {9781430259114},
publisher = {Apress},
title = {{Pointers in C: A Hands on Approach}},
url = {http://books.google.com/books?hl=en\&lr=\&id=wJN0AgAAQBAJ\&oi=fnd\&pg=PP3\&dq=Pointers+in+C:+A+Hands+on+Approach\&ots=ZQYsednGKY\&sig=3kXoCw3JTYI3iZmBq24k-9KMg5s},
year = {2013}
}
@article{Pietrek1995,
author = {Pietrek, Matt},
doi = {ISSN: 0889-9932},
journal = {Microsoft Systems Journal},
number = {4},
pages = {19+},
title = {{Understanding Windows 95 memory management: paging, address spaces and contexts}},
url = {http://ecu.summon.serialssolutions.com.ezproxy.ecu.edu.au/\#!/search?bookMark=ePnHCXMw42LgTQStzc4rAe\_hSmEBt-IsdYH1oBEHfMMisF7gZAgIRd6\_oRAO7ITmlxcrWJoq5IJWmVYq5MJXgFgpFIAv7dFRAOZHUD9UAZjfgBkJyM9LUQCt6gYWZcXcDLJuriHOHrqgwjUeFEMlRYnJ8YZmwDreyBh0\_zF-eQBakDqT},
volume = {10},
year = {1995}
}
@inproceedings{Glass1997,
author = {Glass, Gideon and Cao, Pei},
booktitle = {SIGMETRICS '97 Proceedings of the 1997 ACM SIGMETRICS international conference on Measurement and modeling of computer systems},
doi = {10.1145/258612.258681},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Glass, Cao/Adaptive page replacement based on memory reference behavior/Glass, Cao - 1997 - Adaptive page replacement based on memory reference behavior.pdf:pdf},
number = {1},
pages = {115--126},
title = {{Adaptive page replacement based on memory reference behavior}},
volume = {25},
year = {1997}
}
@article{Hsu1997,
author = {Hsu, Shang-te and Chang, Ruei-chuan and Science, Information},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Hsu, Chang, Science/Continuous Checkpointing Joining the Checkpointing with Virtual Memory Paging/Hsu, Chang, Science - 1997 - Continuous Checkpointing Joining the Checkpointing with Virtual Memory Paging.pdf:pdf},
journal = {Software - Practice and Experience},
keywords = {fault tolerance,incremental checkpoint,memory paging},
number = {9},
pages = {1103--1120},
title = {{Continuous Checkpointing : Joining the Checkpointing with Virtual Memory Paging}},
volume = {27},
year = {1997}
}
@inproceedings{Denning1967,
abstract = {Probably the most basic reason behind the ab- sence of a general treatment of resource alloca- tion in modern computer systems is an adequate model for program behavior. In this paper a new model is developed, the "working set model", which enables us to decide which information is in use by a running program and which is not. Such know- ledge is vital for dynamic management of paged The working set of pages associated memories. with a process, defined to be the collection of its most recently used pages, is a useful allocation concept. A proposal for an easy-to-implement allocation policy is set forth; this policy is unique, inasmuch as it blends into one decision function the heretofore independent activities of process-scheduling and memory-management},
address = {New York},
annote = {1076 citations google scholar},
author = {Denning, Peter J.},
booktitle = {SOSP '67 Proceedings of the first ACM symposium on Operating System Principles},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning/The Working Set Model for Program Behavior/Denning - 1967 - The Working Set Model for Program Behavior.pdf:pdf},
pages = {15.1--15.12},
publisher = {ACM},
title = {{The Working Set Model for Program Behavior}},
year = {1967}
}
@article{Jacob1998,
author = {Jacob, Bruce and Mudge, Trevor},
doi = {10.1109/40.710872},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Jacob, Mudge/Virtual memory in contemporary microprocessors/Jacob, Mudge - 1998 - Virtual memory in contemporary microprocessors.pdf:pdf},
journal = {IEEE Micro},
number = {4},
pages = {60--75},
title = {{Virtual memory in contemporary microprocessors}},
volume = {18},
year = {1998}
}
@article{VanWezenbeek1993,
author = {{Van Wezenbeek}, Anton M. and {Jan Withagen}, Willem J.},
doi = {10.1016/0165-6074(93)90254-I},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Van Wezenbeek, Jan Withagen/A survey of memory management/Van Wezenbeek, Jan Withagen - 1993 - A survey of memory management.pdf:pdf},
issn = {01656074},
journal = {Microprocessing and Microprogramming},
number = {3},
pages = {141--162},
title = {{A survey of memory management}},
volume = {36},
year = {1993}
}
@article{Borodin1995,
abstract = {The Sleator-Tarjan competitive analysis of paging (Comm. ACM28 (1985), 202-208) gives us the ability to make strong theoretical statements about the performance of paging algorithms without making probabilistic assumptions on the input. Nevertheless practitioners voice reservations about the model, citing its inability to discern between LRU and FIFO (algorithms whose performances differ markedly in practice), and the fact that the theoretical comptitiveness of LRU is much larger than observed in practice, In addition, we would like to address the following important question: given some knowledge of a program′s reference pattern, can we use it to improve paging performance on that program? We address these concerns by introducing an important practical element that underlies the philosophy behind paging: locality of reference. We devise a graph-theoretical model, the access graph, for studying locality of reference. We use it to prove results that address the practical concerns mentioned above, In addition, we use our model to address the following questions: How well is LRU likely to perform on a given program? Is there a universal paging algorithm that achieves (nearly) the best possible paging performance on every program? We do so without compromising the benefits of the Sleator-Tarjan model, while bringing it closer to practice.},
author = {Borodin, Allan and Raghavan, Prabhakar and Irani, Sandy and Schieber, Baruch},
doi = {doi:10.1006/jcss.1995.1021},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Borodin et al/Competitive paging with locality of reference/Borodin et al. - 1995 - Competitive paging with locality of reference.pdf:pdf},
isbn = {0897913973},
issn = {00220000},
journal = {Journal of Computer and System Sciences},
number = {2},
pages = {244--258},
title = {{Competitive paging with locality of reference}},
volume = {50},
year = {1995}
}
@inproceedings{Seshadri2015,
address = {New York},
author = {Seshadri, Vivek and Pekhimenko, Gennady and Ruwase, Olatunji and Mutlu, Onur and Gibbons, Phillip B and Kozuch, Michael A and Mowry, Todd C and Chilimbi, Trishul},
booktitle = {ISCA '15 Proceedings of the 42nd Annual International Symposium on Computer Architecture},
doi = {10.1145/2749469.2750379},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Seshadri et al/Page Overlays An Enhanced Virtual Memory Framework to Enable Fine-grained Memory Management/Seshadri et al. - 2015 - Page Overlays An Enhanced Virtual Memory Framework to Enable Fine-grained Memory Manage.pdf:pdf},
isbn = {9781450334020},
pages = {79--91},
title = {{Page Overlays : An Enhanced Virtual Memory Framework to Enable Fine-grained Memory Management}},
year = {2015}
}
@article{Denning1996,
author = {Denning, Peter J.},
doi = {10.1145/234313.234403},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning/Virtual Memory/Denning - 1996 - Virtual Memory.pdf:pdf},
journal = {ACM Computing Surveys (CSUR)},
number = {1},
pages = {213--216},
title = {{Virtual Memory}},
volume = {28},
year = {1996}
}
@article{Pohm1981,
author = {Pohm, A. V. and Smay, T. A.},
doi = {10.1109/C-M.1981.220216},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Pohm, Smay/Tutorial Series 13 Computer Memory Systems/Pohm, Smay - 1981 - Tutorial Series 13 Computer Memory Systems.pdf:pdf},
issn = {0018-9162},
journal = {Computer},
number = {10},
pages = {93--110},
title = {{Tutorial Series 13 Computer Memory Systems}},
volume = {14},
year = {1981}
}
@book{Gorman2004,
author = {Gorman, Mel},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Gorman/Understanding the Linux Virtual Memory Manager/Gorman - 2004 - Understanding the Linux Virtual Memory Manager.pdf:pdf},
isbn = {9780131453487},
pages = {748},
publisher = {Prentice Hall},
title = {{Understanding the Linux Virtual Memory Manager}},
year = {2004}
}
@book{Jacob2008,
address = {Burlington, MA},
author = {Jacob, Bruce and Ng, Spencer W. and Wang, David T.},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Jacob, Ng, Wang/Memory Systems - Cache, DRAM, Disk/Jacob, Ng, Wang - 2008 - Memory Systems - Cache, DRAM, Disk.pdf:pdf},
isbn = {9780123797513},
pages = {998},
publisher = {Morgan Kaufmann Publishers},
title = {{Memory Systems - Cache, DRAM, Disk}},
year = {2008}
}
@article{Hyslop1987,
author = {Hyslop, Gary A. and Lamagna, Edmund A.},
doi = {10.1016/0020-0190(87)90094-9},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Hyslop, Lamagna/Performance of distributive partitioned sort in a demand paging environment/Hyslop, Lamagna - 1987 - Performance of distributive partitioned sort in a demand paging environment.pdf:pdf},
issn = {00200190},
journal = {Information Processing Letters},
keywords = {demand paging,distributive partitioned sort,page fault,quicksort,sorting,working set},
number = {1},
pages = {61--64},
title = {{Performance of distributive partitioned sort in a demand paging environment}},
volume = {25},
year = {1987}
}
@article{Brown1984,
author = {Brown, R. L. and Denning, Peter J. and Tichy, W. F},
doi = {10.1109/MC.1984.1658969},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Brown, Denning, Tichy/Advanced Operating Systems/Brown, Denning, Tichy - 1984 - Advanced Operating Systems.pdf:pdf},
journal = {Computer},
number = {10},
pages = {173--190},
title = {{Advanced Operating Systems}},
volume = {17},
year = {1984}
}
@article{Chu1976,
abstract = {Virtual memory is one of the major concepts that has evolved in computer architecture over the last decade. It has had a great impact on the design of new computer systems since it was first introduced by the designers of the Atlas computer in 1962. A virtual memory is usually divided into blocks of contiguous locations to allow an efficient mapping of the logical addresses into the physical address space. In this paper, we are concerned with paging systems, that is, systems for which the blocks of contiguous locations are of equal size. The memory system consists of two levels: main memory and auxiliary memory. The occurrence of a reference to a page that is currently not in main memory is called a page fault. A page fault results in the interruption of the program and the transfer of the referenced page from auxiliary to main memory.},
author = {Chu, Wesley W. and Opderbeck, Holger},
doi = {10.1109/C-M.1976.218439},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Chu, Opderbeck/PROGRAM BEHAVIOR AND THE PAGE-FAULT-FREQUENCY REPLACEMENT ALGORITHM/Chu, Opderbeck - 1976 - PROGRAM BEHAVIOR AND THE PAGE-FAULT-FREQUENCY REPLACEMENT ALGORITHM.pdf:pdf},
issn = {00189162},
journal = {Computer},
number = {11},
pages = {29--38},
title = {{PROGRAM BEHAVIOR AND THE PAGE-FAULT-FREQUENCY REPLACEMENT ALGORITHM.}},
volume = {9},
year = {1976}
}
@article{Nawrocki1983,
author = {Nawrocki, Jerzy R.},
doi = {10.1016/0020-0190(83)90069-8},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Nawrocki/Contiguous Segmentation with Limited Compacting/Nawrocki - 1983 - Contiguous Segmentation with Limited Compacting.pdf:pdf},
journal = {Information Processing Letters},
pages = {57--62},
title = {{Contiguous Segmentation with Limited Compacting}},
volume = {17},
year = {1983}
}
@article{Denning1970,
author = {Denning, Peter J.},
doi = {10.1145/356571.356573},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning/Virtual Memory/Denning - 1970 - Virtual Memory.pdf:pdf},
issn = {03600300},
journal = {ACM Computing Surveys},
keywords = {2,3,4,6,algorithms,and phrases,cr categories,dynamic storage allocation,memory allocation,one-level store,paging,replacement,segmentation,storage allocation,storage fragmentation,thrashing,virtual memory,working set},
number = {3},
pages = {153--189},
title = {{Virtual Memory}},
volume = {2},
year = {1970}
}
@article{Doran1976,
abstract = {"Virtual memory" is a computing term which has come into increasing use in recent years. Unfortunately, like other new expressions, its use often causes controversy and misunderstanding, for it is used to mean different things by different people. Not long ago when one major computer vendor announced the introduction of the new technique of 'virtual storage,' other manufacturers complained that they had been doing the same thing for years under a different name (see Figure 1).},
author = {Doran, R W},
doi = {10.1109/C-M.1976.218408},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Doran/Virtual Memory/Doran - 1976 - Virtual Memory.pdf:pdf},
journal = {Computer},
number = {10},
pages = {27--37},
title = {{Virtual Memory}},
url = {http://ecu.summon.serialssolutions.com.ezproxy.ecu.edu.au/\#!/search?bookMark=ePnHCXMwbZ09C8IwEIaLOPiB\_gPBwU2q-WrTzkVx6aauR9ok4CKiFfz53iXaqUsp9E3Icr03JPfcLFkYupt970INl00iToezcl-l9Y5j-tuFbUUxIpJpRnxkrsbhf0mhl4vJ\_xBAYSqZJsvr7UmlFOuarp6ic7ocD-fqlP56BaQtQcxSJZ},
volume = {9},
year = {1976}
}
@article{Jacob2001,
abstract = {We present a feasibility study for performing virtual address
translation without specialized translation hardware. Removing address
translation hardware and instead managing address translation in
software has the potential to make the processor design simpler,
smaller, and more energy-efficient at little or no cost in performance.
The purpose of this study is to describe the design and quantify its
performance impact. Trace-driven simulations show that software-managed
address translation is just as efficient as hardware-managed address
translation. Moreover, mechanisms to support such features as shared
memory, superpages, fine-grained protection, and sparse address spaces
can be defined completely in software, allowing for more flexibility
than in hardware-defined mechanisms},
author = {Jacob, Bruce and Mudge, Trevor},
doi = {10.1109/12.926161},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Jacob, Mudge/Uniprocessor virtual memory without TLBs/Jacob, Mudge - 2001 - Uniprocessor virtual memory without TLBs.pdf:pdf},
isbn = {0018-9340 VO  - 50},
issn = {00189340},
journal = {IEEE Transactions on Computers},
keywords = {Memory management,Software-managed address translation,Translation lookaside buffers,Virtual address translation,Virtual caches,Virtual memory},
number = {5},
pages = {482--499},
title = {{Uniprocessor virtual memory without TLBs}},
volume = {50},
year = {2001}
}
@book{Silberschatz2013,
address = {Hoboken, NJ},
author = {Silberschatz, Abraham and Galvin, Peter Baer and Gagne, Greg},
edition = {2nd},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Silberschatz, Galvin, Gagne/Operating System Concepts Essentials/Silberschatz, Galvin, Gagne - 2013 - Operating System Concepts Essentials.pdf:pdf},
isbn = {9781118804926},
pages = {784},
publisher = {Wiley},
title = {{Operating System Concepts Essentials}},
year = {2013}
}
@inproceedings{IWMM95,
author = {Hartmanis, J and Leeuwen, J Van and Brauer, W and Gries, D and Stoer, J},
booktitle = {International Workshop IWMM 95 Kinross, UK, September 27-29, 1995 Proceedings},
doi = {10.1007/3-540-60368-9},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Hartmanis et al/Memory Management/Hartmanis et al. - 1995 - Memory Management.pdf:pdf},
isbn = {978-3-540-60368-9},
title = {{Memory Management}},
url = {http://link.springer.com/10.1007/3-540-60368-9},
volume = {986},
year = {1995}
}
@inproceedings{Potier1977,
address = {New York},
author = {Potier, Dominique},
booktitle = {SOSP '77 Proceedings of the sixth ACM symposium on Operating systems principles},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Potier/Analysis of demand paging policies with swapped working sets/Potier - 1977 - Analysis of demand paging policies with swapped working sets.pdf:pdf},
keywords = {and phrases,demand paging algorithms,paging algorithms,program behaviour,queueing network,semi-markov model,swapping,virtual memory,working-set memory management},
pages = {125--131},
title = {{Analysis of demand paging policies with swapped working sets}},
year = {1977}
}
@article{Kolanski2008,
abstract = {We present an extension to classical separation logic which allows reasoning about virtual memory. Our logic is formalised in the Isabelle/HOL theorem prover in a manner allowing classical separation logic notation to be used at an abstract level. We demonstrate that in the common cases, such as user applications, our logic reduces to classical separation logic. At the same time we can express properties about page tables, direct physical memory access, virtual memory access, and shared memory in detail. ?? 2008 Elsevier B.V. All rights reserved.},
author = {Kolanski, Rafal},
doi = {10.1016/j.entcs.2008.06.042},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Kolanski/A Logic for Virtual Memory/Kolanski - 2008 - A Logic for Virtual Memory.pdf:pdf},
issn = {15710661},
journal = {Electronic Notes in Theoretical Computer Science},
keywords = {Interactive Theorem Proving,Separation Logic,Virtual Memory},
number = {C},
pages = {61--77},
publisher = {Elsevier B.V.},
title = {{A Logic for Virtual Memory}},
url = {http://dx.doi.org/10.1016/j.entcs.2008.06.042},
volume = {217},
year = {2008}
}
@inproceedings{Karcanaj2015,
author = {Karcanaj, Helidon and Banushi, Mario and Tafa, Igli and Fejzaj, Julian and Saatciu, Denis},
booktitle = {2015 Fifth International Conference on Advanced Computing \& Communication Technologies},
doi = {10.1109/ACCT.2015.96},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Karcanaj et al/Virtual Memory Behavior around Physical and Virtual System Limits/Karcanaj et al. - 2015 - Virtual Memory Behavior around Physical and Virtual System Limits.pdf:pdf},
isbn = {978-1-4799-8488-6},
keywords = {- paging,page fault,redis,thrashing,tirana university tirana university,virtual memory},
pages = {261--265},
title = {{Virtual Memory Behavior around Physical and Virtual System Limits}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7079090},
year = {2015}
}
@article{Stonebraker1984,
author = {Stonebraker, Michael},
doi = {10.1145/850755.850757},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Stonebraker/Virtual Memory Transaction Management/Stonebraker - 1984 - Virtual Memory Transaction Management.pdf:pdf},
issn = {0163-5980},
journal = {ACM SIGOPS Operating Systems Review},
number = {2},
pages = {8--16},
title = {{Virtual Memory Transaction Management}},
url = {http://doi.acm.org.ezproxy.ecu.edu.au/10.1145/850755.850757},
volume = {18},
year = {1984}
}
@article{Wilkes2001,
abstract = {First Page of the Article},
author = {Wilkes, M. V.},
doi = {10.1109/TC.2001.966488},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Wilkes/High performance memory systems/Wilkes - 2001 - High performance memory systems.pdf:pdf},
issn = {00189340},
journal = {IEEE Transactions on Computers},
number = {11},
pages = {1105},
title = {{High performance memory systems}},
volume = {50},
year = {2001}
}
@incollection{Jacob2008,
abstract = {Virtual memory is one technique for managing the resource of physical memory, including the caches, main memory, and disk subsystem. It provides software with the illusion of a very large amount of main memory. The basic function of virtual memory is to create a virtual-machine environment for every process, which among other things allows text, data, and stack regions to begin at statically known locations in all processes without fear of conflict. It is the primary client of the memory system, in that a user process is not aware of physical memory and does not access it directly. Different architectures provide support for operating system features in very different ways. One of the fundamental differences is their treatment of address spaces. The chapter presents a taxonomy describing the architectural organization and protection of an address space. A system's interrupt mechanism, memory map, and page table/TLB combinations comprise the heart of a typical virtual memory system, one of the most fundamental services that a modern operating system provides. It highlights the operating system's use of and response to precise interrupts, arguably the fundamental building block of today's multi-tasking systems. This chapter presents a definition for a base in-order pipeline and then adds support for nested interrupts and virtual memory management via a MIPS-like memory map, page table, and TLB.},
address = {Burlington, MA},
author = {Jacob, Bruce and Ng, Spencer W. and Wang, David T. and Rodriguez, Samuel},
booktitle = {Memory Systems - Cache, DRAM, Disk},
chapter = {31},
doi = {10.1016/B978-012379751-3.50033-3},
file = {:C$\backslash$:/Users/marty/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Jacob et al. - 2008 - Memory Systems.pdf:pdf},
isbn = {9780123797513},
pages = {883--920},
publisher = {Morgan Kaufmann Publishers},
title = {{Virtual Memory}},
url = {http://www.sciencedirect.com/science/article/pii/B9780123797513500333},
year = {2008}
}
@article{Kwon2010,
author = {Kwon, Ohhoon and Koh, Kern},
doi = {10.1109/TCE.2010.5606292},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Kwon, Koh/Swap Space Management Technique for Portable Consumer Electronics with NAND Flash Memory/Kwon, Koh - 2010 - Swap Space Management Technique for Portable Consumer Electronics with NAND Flash Memory.pdf:pdf},
journal = {IEEE Transactions on Consumer Electronics},
number = {3},
pages = {1524--1531},
title = {{Swap Space Management Technique for Portable Consumer Electronics with NAND Flash Memory}},
volume = {56},
year = {2010}
}
@article{Albers2005,
abstract = {Motivated by the fact that competitive analysis yields too pessimistic results when applied to the paging problem, there has been considerable research interest in refining competitive analysis and in developing alternative models for studying online paging. In this paper, we propose a new, simple model for studying paging with locality of reference. The model is closely related to Denning's working set concept and directly reflects the amount of locality that request sequences exhibit. We use the page fault rate to evaluate the quality of paging algorithms, which is the performance measure used in practice. We develop tight or nearly tight bounds on the fault rates achieved by popular paging algorithms such as LRU, FIFO, deterministic Marking strategies and LFD. These bounds show that LRU is an optimal online algorithm, whereas FIFO and Marking strategies are not optimal in general. We present an experimental study comparing the page fault rates proven in our analyses to the page fault rates observed in practice. © 2004 Elsevier Inc. All rights reserved.},
author = {Albers, Susanne and Favrholdt, Lene M. and Giel, Oliver},
doi = {10.1016/j.jcss.2004.08.002},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Albers, Favrholdt, Giel/On paging with locality of reference/Albers, Favrholdt, Giel - 2005 - On paging with locality of reference.pdf:pdf},
isbn = {1581134959},
issn = {00220000},
journal = {Journal of Computer and System Sciences},
keywords = {Fault rate,Locality of reference,Paging},
number = {2},
pages = {145--175},
title = {{On paging with locality of reference}},
volume = {70},
year = {2005}
}
@article{Rosene1967,
abstract = {In multiprocessor systems it is desirable to look for and allocate storage without extensive data moving. Two techniques for accomplishing this, associative memory techniques and indirect addressing techniques, are described. It is concluded that the two methods are similar in performance, but that indirect addressing is more economical. An indirect addressing method is described in detail and various methods of implementation compared. The memory overhead and the time penalty (in memory accesses) are given as a function of memory size and method of implementation. It is concluded that a computed address table look-up technique should be used and that the block size should be either 256 or 512 words.},
author = {Rosene, A. Frederick},
doi = {10.1109/PGEC.1967.264774},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Rosene/Memory Allocation for Multiprocessors/Rosene - 1967 - Memory Allocation for Multiprocessors.pdf:pdf},
issn = {0367-7508},
journal = {IEEE Transactions on Electronic Computers},
keywords = {Associative memory,computed address,dynamic storage allocation,indirect address table,ltimultiprocessor,memory allocation,tree structure},
number = {5},
pages = {659--665},
title = {{Memory Allocation for Multiprocessors}},
volume = {EC-16},
year = {1967}
}
@article{Johansson1979,
abstract = {This article describes a simple way by which a microcomputer system can be made to use virtual addressing of a memory which is organised on two levels. Consideration has been given to the fact that the system must at all times be able to serve interrupts very quickly. The system is also capable of diagnosing itself and modifying the implementation of the virtual memory.},
author = {Johansson, Lars-\AA ke},
doi = {10.1016/0303-1268(79)90142-1},
file = {:C$\backslash$:/Users/marty/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Johansson - 1979 - Virtual memory management for microcomputers in real-time applications(2).pdf:pdf},
issn = {03031268},
journal = {Euromicro Newsletter},
month = jul,
number = {4},
pages = {235--238},
title = {{Virtual memory management for microcomputers in real-time applications}},
url = {http://www.sciencedirect.com/science/article/pii/0303126879901421},
volume = {5},
year = {1979}
}
@article{Jacob1998,
abstract = {Los autores introducen tecnolog\'{\i}as b\'{a}sicas de memoria virtual y luego comparar los dise\~{n}os de administraci\'{o}n de memoria en tres microarquitecturas comerciales. Ellos muestran la diversidad de soporte de memoria virtual y, por implicaci\'{o}n, c\'{o}mo esta diversidad puede complicar y operaciones del sistema de concesiones. Bruce},
author = {Jacob, Bruce and Mudge, Trevor},
doi = {10.1109/2.683005},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Jacob, Mudge/Virtual Memory Issues of Implementation/Jacob, Mudge - 1998 - Virtual Memory Issues of Implementation.pdf:pdf},
issn = {00189162},
journal = {Computer},
number = {6},
pages = {33--43},
title = {{Virtual Memory: Issues of Implementation}},
url = {http://www.computer.org/csdl/mags/co/1998/06/r6033.pdf},
volume = {31},
year = {1998}
}
@article{McNutt1996,
abstract = {Detailed instructions on configuring swap space on Solaris 2.4 and HP-UX 10.0 are provided.; Detailed instructions on configuring swap space on Solaris 2.4 and HP-UX 10.0 are provided.},
author = {McNutt, Dinah},
doi = {0742-3136},
journal = {Performance Computing / Unix Review},
number = {3},
pages = {77--80},
title = {{Configuring swap space}},
url = {http://ecu.summon.serialssolutions.com.ezproxy.ecu.edu.au/\#!/search?bookMark=ePnHCXMwbV3BCsIwDPXgRcGrFxEFjzJYu1i7syh-gPdQu3YIIuIq-vnmbe4iHkvSXkqTR5OXNx5MHHqzb6nlcFXDdgwmBuOhTNj3XihjR4MpSG2XuqXjLZuXuy\_lEQEmng770-6YfdUAsrokypTkfXLQO4SkJJ1zX6gq5iY4qkwM3nonSz},
volume = {14},
year = {1996}
}
@article{Denning1972,
author = {Denning, Peter J and Schwartz, Stuart C},
doi = {10.1145/361268.361281},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning, Schwartz/Properties of the working-set model/Denning, Schwartz - 1972 - Properties of the working-set model.pdf:pdf},
journal = {Communications of the ACM},
keywords = {paging,paging algorithms,phrases,program,program behavior,working set model},
number = {3},
pages = {191--198},
title = {{Properties of the working-set model}},
volume = {15},
year = {1972}
}
@article{Oikawa2014,
author = {Oikawa, Shuichi},
doi = {10.1186/2193-1801-3-494},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Oikawa/Non-Volatile Memory Management Methods for Non-Volatile Main Memory based on File Systems/Oikawa - 2014 - Non-Volatile Memory Management Methods for Non-Volatile Main Memory based on File Systems.pdf:pdf},
journal = {SpringerPlus},
keywords = {file systems,memory,memory management,non-volatile,nv,operating systems},
number = {494},
pages = {1--8},
title = {{Non-Volatile Memory Management Methods for Non-Volatile Main Memory based on File Systems}},
volume = {3},
year = {2014}
}
@book{Blunden2003,
abstract = {Acknowledgments Publishing a book is an extended process that involves a number of people.Writing the final manuscript is just a small part of the big picture. This section is dedicated to all the people who directly, and indirectly, lent me their help. First and foremost, I would like to thank Jim Hill ofWordware Publishing for giving me the opportunity to write a book and believ- ing in me. I would also like to extend thanks toWes Beckwith and Beth Kohler.Wes, in addition to offering constant encouragement, does a great job of putting up with my e-mails and handling the vari- ous packages that I send. Beth Kohler, who performed the incredible task of reading my first book forWordware in a matter of days, has also been invaluable. I first spoke with Barry Brey back in the mid-1990s when I became interested in protected mode programming. He has always taken the time to answer my questions and offer his insight. Barry wrote the first book on the Intel chip set back in 1984. Since then, he has written well over 20 books. His current textbook on Intel’s IA32 processors is in its sixth edition. This is why I knew I had to ask Barry to be the technical editor for this book. Thanks, Barry. “Look, our middleware even runs on that littleWindows NT piece of crap.” —George Matkovitz “Hey, who was the \%\&\^{}\$ son of a \&*\$\# who wrote this optimized load of . . . oh, it was me.” —Mike Adler Mike Adler and George Matkovitz are two old fogeys who worked at Control Data back when Seymour Cray kicked the tar out of IBM. George helped to implement the world’s first message-passing operating system at Control Data. Mike also worked on a number of groundbreaking system software projects. I met these two codgers while performing R\&D for an ERP vendor in the Midwest. I hadn’t noticed how much these engineers had influenced me until I left Minnesota for California. It was almost as though I had learned through osmosis. A lot of my core understanding of software and the computer industry in general is based on the bits of hard-won advice and lore that these gentlemen passed on to me. I distinctly remember walking into Mike’s office and asking him, “Hey Mike, how do you build an operating system?” I would also like to thank Frank Merat, a senior professor at Case Western Reserve University. Frank has consistently shown interest in my work and has offered his support whenever he could. There is no better proving ground for a book than an established research university. Finally, I would like to thank SonicWALL, Inc. for laying me off and giving me the opportunity to sit around and think. The days I spent huddled with my computers were very productive.},
address = {Plano, TX},
author = {Blunden, Bill},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Blunden/Memory Management Algorithms and Implementation in CC/Blunden - 2003 - Memory Management Algorithms and Implementation in CC.pdf:pdf},
isbn = {1556223471},
pages = {391},
publisher = {Wordware},
title = {{Memory Management Algorithms and Implementation in C/C++}},
year = {2003}
}
@book{Blanchet2012,
address = {Hoboken, NJ},
author = {Blanchet, Gerard and Bertrand, Dupouy},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Blanchet, Bertrand/Computer Architecture/Blanchet, Bertrand - 2012 - Computer Architecture.pdf:pdf},
isbn = {9781848214293},
pages = {384},
publisher = {Wiley},
title = {{Computer Architecture}},
year = {2012}
}
@inproceedings{Kavar2013,
address = {Tiruchengode},
author = {Kavar, C. C. and Parmar, S. S.},
booktitle = {Computing, Communications and Networking Technologies (ICCCNT), 2013 Fourth International Conference on},
doi = {10.1109/ICCCNT.2013.6726496},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Kavar, Parmar/Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Structure/Kavar, Parmar - 2013 - Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Stru.pdf:pdf},
keywords = {- page replacement,augmentation,data structure,least recently used,weighting replacement policy},
pages = {1--5},
publisher = {IEEE},
title = {{Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Structure}},
year = {2013}
}
@inproceedings{Jantz2013,
address = {New York},
author = {Jantz, Michael R. and Strickland, Carl and Kumar, Karthik and Dimitrov, Martin and Doshi, Kshitij A.},
booktitle = {VEE '13 Proceedings of the 9th ACM SIGPLAN/SIGOPS international conference on Virtual execution environments},
doi = {10.1145/2451512.2451543},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Jantz et al/A framework for application guidance in virtual memory systems/Jantz et al. - 2013 - A framework for application guidance in virtual memory systems.pdf:pdf},
isbn = {978-1-4503-1266-0},
keywords = {containerization,memory management,memory virtualization,performance,power,re-,source allocation},
pages = {155--166},
publisher = {ACM},
title = {{A framework for application guidance in virtual memory systems}},
year = {2013}
}
@article{Azriel2014,
author = {Azriel, Leonid and Mendelson, Avi and Weiser, Uri},
doi = {10.1109/LCA.2014.2319077},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Azriel, Mendelson, Weiser/Peripheral Memory a Technique for Fighting Memory Bandwidth Bottleneck/Azriel, Mendelson, Weiser - 2014 - Peripheral Memory a Technique for Fighting Memory Bandwidth Bottleneck.pdf:pdf},
issn = {1556-6056},
journal = {IEEE Computer Architecture Letters},
number = {1},
pages = {54--57},
title = {{Peripheral Memory: a Technique for Fighting Memory Bandwidth Bottleneck}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6803056},
volume = {14},
year = {2014}
}

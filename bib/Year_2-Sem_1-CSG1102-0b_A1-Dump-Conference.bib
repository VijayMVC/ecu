Automatically generated by Mendeley Desktop 1.14
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

<<<<<<< HEAD
@inproceedings{Kavar2013,
address = {Tiruchengode},
author = {Kavar, C. C. and Parmar, S. S.},
booktitle = {Computing, Communications and Networking Technologies (ICCCNT), 2013 Fourth International Conference on},
doi = {10.1109/ICCCNT.2013.6726496},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Kavar, Parmar/Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Structure/Kavar, Parmar - 2013 - Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Stru.pdf:pdf},
keywords = {- page replacement,augmentation,data structure,least recently used,weighting replacement policy},
pages = {1--5},
publisher = {IEEE},
title = {{Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Structure}},
year = {2013}
}
@inproceedings{Jantz2013,
address = {New York},
author = {Jantz, Michael R. and Strickland, Carl and Kumar, Karthik and Dimitrov, Martin and Doshi, Kshitij A.},
booktitle = {VEE '13 Proceedings of the 9th ACM SIGPLAN/SIGOPS international conference on Virtual execution environments},
doi = {10.1145/2451512.2451543},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Jantz et al/A framework for application guidance in virtual memory systems/Jantz et al. - 2013 - A framework for application guidance in virtual memory systems.pdf:pdf},
isbn = {978-1-4503-1266-0},
keywords = {containerization,memory management,memory virtualization,performance,power,re-,source allocation},
pages = {155--166},
publisher = {ACM},
title = {{A framework for application guidance in virtual memory systems}},
year = {2013}
}
=======
>>>>>>> saucers
@inproceedings{Denning1968,
abstract = {A particularly troublesome phenomenon, thrashing, may seriously interfere with the performance of paged memory systems, reducing computing giants (Multics, IBM System 360, and others not necessarily excepted) to computing dwarfs. The term thrashing denotes excessive overhead and severe performance degradation or collapse caused by too much paging. Thrashing inevitably turns a shortage of memory space into a surplus of processor time.},
address = {New York},
author = {Denning, Peter J.},
booktitle = {AFIPS Joint Computer Conferences, Proceedings of the December 9-11, 1968, fall joint computer conference, part I},
doi = {10.1145/1476589.1476705},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning/Thrashing its causes and prevention/Denning - 1968 - Thrashing its causes and prevention.pdf:pdf},
pages = {915--922},
publisher = {ACM},
title = {{Thrashing: its causes and prevention}},
year = {1968}
}
<<<<<<< HEAD
=======
@inproceedings{Babaoglu1981,
address = {New York},
author = {Babaoglu, \"{O}zalp and Joy, William},
booktitle = {SOSP '81 Proceedings of the eighth ACM symposium on Operating systems principles},
doi = {10.1145/800216.806595},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Babaoglu, Joy/Converting a swap-based system to do paging in an architecture lacking page-referenced bits/Babaoglu, Joy - 1981 - Converting a swap-based system to do paging in an architecture lacking page-referenced bits.pdf:pdf},
isbn = {0-89791-062-1},
issn = {01635980},
number = {5},
pages = {78--86},
publisher = {ACM},
title = {{Converting a swap-based system to do paging in an architecture lacking page-referenced bits}},
volume = {15},
year = {1981}
}
@inproceedings{Flannery1974,
author = {Flannery, William D.},
booktitle = {ANSS '74: Proceedings of the 2nd symposium on Simulation of computer systems},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Flannery/Simulation of the working set model for virtual storage management/Flannery - 1974 - Simulation of the working set model for virtual storage management.pdf:pdf},
pages = {175--178},
title = {{Simulation of the working set model for virtual storage management}},
year = {1974}
}
@inproceedings{Rajwar2005,
abstract = {Writing concurrent programs is difficult because of the complexity of ensuring proper synchronization. Conventional lock-based synchronization suffers from well-known limitations, so researchers have considered nonblocking transactions as an alternative. Recent hardware proposals have demonstrated how transactions can achieve high performance while not suffering limitations of lock-based mechanisms. However, current hardware proposals require programmers to be aware of platform-specific resource limitations such as buffer sizes, scheduling quanta, as well as events such as page faults, and process migrations. If the transactional model is to gain wide acceptance, hardware support for transactions must be virtualized to hide these limitations in much the same way that virtual memory shields the programmer from platform-specific limitations of physical memory. This paper proposes virtual transactional memory (VTM), a user-transparent system that shields the programmer from various platform-specific resource limitations. VTM maintains the performance advantage of hardware transactions, incurs low overhead in time, and has modest costs in hardware support. While many system-level challenges remain, VTM takes a step toward making transactional models more widely acceptable.},
author = {Rajwar, Ravi and Herlihy, Maurice and Lai, Konrad},
booktitle = {ISCA '05 Proceedings of the 32nd annual international symposium on Computer Architecture},
doi = {10.1109/ISCA.2005.54},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Rajwar, Herlihy, Lai/Virtualizing Transactional Memory/Rajwar, Herlihy, Lai - 2005 - Virtualizing Transactional Memory.pdf:pdf},
isbn = {076952270X},
issn = {10636897},
pages = {494--505},
title = {{Virtualizing Transactional Memory}},
year = {2005}
}
@inproceedings{Glass1997,
author = {Glass, Gideon and Cao, Pei},
booktitle = {SIGMETRICS '97 Proceedings of the 1997 ACM SIGMETRICS international conference on Measurement and modeling of computer systems},
doi = {10.1145/258612.258681},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Glass, Cao/Adaptive page replacement based on memory reference behavior/Glass, Cao - 1997 - Adaptive page replacement based on memory reference behavior.pdf:pdf},
number = {1},
pages = {115--126},
title = {{Adaptive page replacement based on memory reference behavior}},
volume = {25},
year = {1997}
}
@inproceedings{Denning1967,
abstract = {Probably the most basic reason behind the ab- sence of a general treatment of resource alloca- tion in modern computer systems is an adequate model for program behavior. In this paper a new model is developed, the "working set model", which enables us to decide which information is in use by a running program and which is not. Such know- ledge is vital for dynamic management of paged The working set of pages associated memories. with a process, defined to be the collection of its most recently used pages, is a useful allocation concept. A proposal for an easy-to-implement allocation policy is set forth; this policy is unique, inasmuch as it blends into one decision function the heretofore independent activities of process-scheduling and memory-management},
address = {New York},
annote = {1076 citations google scholar},
author = {Denning, Peter J.},
booktitle = {SOSP '67 Proceedings of the first ACM symposium on Operating System Principles},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning/The Working Set Model for Program Behavior/Denning - 1967 - The Working Set Model for Program Behavior.pdf:pdf},
pages = {15.1--15.12},
publisher = {ACM},
title = {{The Working Set Model for Program Behavior}},
year = {1967}
}
@inproceedings{Seshadri2015,
address = {New York},
author = {Seshadri, Vivek and Pekhimenko, Gennady and Ruwase, Olatunji and Mutlu, Onur and Gibbons, Phillip B and Kozuch, Michael A and Mowry, Todd C and Chilimbi, Trishul},
booktitle = {ISCA '15 Proceedings of the 42nd Annual International Symposium on Computer Architecture},
doi = {10.1145/2749469.2750379},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Seshadri et al/Page Overlays An Enhanced Virtual Memory Framework to Enable Fine-grained Memory Management/Seshadri et al. - 2015 - Page Overlays An Enhanced Virtual Memory Framework to Enable Fine-grained Memory Manage.pdf:pdf},
isbn = {9781450334020},
pages = {79--91},
title = {{Page Overlays : An Enhanced Virtual Memory Framework to Enable Fine-grained Memory Management}},
year = {2015}
}
>>>>>>> saucers
@inproceedings{IWMM95,
author = {Hartmanis, J and Leeuwen, J Van and Brauer, W and Gries, D and Stoer, J},
booktitle = {International Workshop IWMM 95 Kinross, UK, September 27-29, 1995 Proceedings},
doi = {10.1007/3-540-60368-9},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Hartmanis et al/Memory Management/Hartmanis et al. - 1995 - Memory Management.pdf:pdf},
isbn = {978-3-540-60368-9},
title = {{Memory Management}},
url = {http://link.springer.com/10.1007/3-540-60368-9},
volume = {986},
year = {1995}
}
@inproceedings{Potier1977,
address = {New York},
author = {Potier, Dominique},
booktitle = {SOSP '77 Proceedings of the sixth ACM symposium on Operating systems principles},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Potier/Analysis of demand paging policies with swapped working sets/Potier - 1977 - Analysis of demand paging policies with swapped working sets.pdf:pdf},
keywords = {and phrases,demand paging algorithms,paging algorithms,program behaviour,queueing network,semi-markov model,swapping,virtual memory,working-set memory management},
pages = {125--131},
title = {{Analysis of demand paging policies with swapped working sets}},
year = {1977}
}
@inproceedings{Karcanaj2015,
author = {Karcanaj, Helidon and Banushi, Mario and Tafa, Igli and Fejzaj, Julian and Saatciu, Denis},
booktitle = {2015 Fifth International Conference on Advanced Computing \& Communication Technologies},
doi = {10.1109/ACCT.2015.96},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Karcanaj et al/Virtual Memory Behavior around Physical and Virtual System Limits/Karcanaj et al. - 2015 - Virtual Memory Behavior around Physical and Virtual System Limits.pdf:pdf},
isbn = {978-1-4799-8488-6},
keywords = {- paging,page fault,redis,thrashing,tirana university tirana university,virtual memory},
pages = {261--265},
title = {{Virtual Memory Behavior around Physical and Virtual System Limits}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7079090},
year = {2015}
}
<<<<<<< HEAD
@inproceedings{Flannery1974,
author = {Flannery, William D.},
booktitle = {ANSS '74: Proceedings of the 2nd symposium on Simulation of computer systems},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Flannery/Simulation of the working set model for virtual storage management/Flannery - 1974 - Simulation of the working set model for virtual storage management.pdf:pdf},
pages = {175--178},
title = {{Simulation of the working set model for virtual storage management}},
year = {1974}
}
@inproceedings{Glass1997,
author = {Glass, Gideon and Cao, Pei},
booktitle = {SIGMETRICS '97 Proceedings of the 1997 ACM SIGMETRICS international conference on Measurement and modeling of computer systems},
doi = {10.1145/258612.258681},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Glass, Cao/Adaptive page replacement based on memory reference behavior/Glass, Cao - 1997 - Adaptive page replacement based on memory reference behavior.pdf:pdf},
number = {1},
pages = {115--126},
title = {{Adaptive page replacement based on memory reference behavior}},
volume = {25},
year = {1997}
}
@inproceedings{Denning1967,
abstract = {Probably the most basic reason behind the ab- sence of a general treatment of resource alloca- tion in modern computer systems is an adequate model for program behavior. In this paper a new model is developed, the "working set model", which enables us to decide which information is in use by a running program and which is not. Such know- ledge is vital for dynamic management of paged The working set of pages associated memories. with a process, defined to be the collection of its most recently used pages, is a useful allocation concept. A proposal for an easy-to-implement allocation policy is set forth; this policy is unique, inasmuch as it blends into one decision function the heretofore independent activities of process-scheduling and memory-management},
address = {New York},
annote = {1076 citations google scholar},
author = {Denning, Peter J.},
booktitle = {SOSP '67 Proceedings of the first ACM symposium on Operating System Principles},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Denning/The Working Set Model for Program Behavior/Denning - 1967 - The Working Set Model for Program Behavior.pdf:pdf},
pages = {15.1--15.12},
publisher = {ACM},
title = {{The Working Set Model for Program Behavior}},
year = {1967}
}
@inproceedings{Seshadri2015,
=======
@inproceedings{Kavar2013,
address = {Tiruchengode},
author = {Kavar, C. C. and Parmar, S. S.},
booktitle = {Computing, Communications and Networking Technologies (ICCCNT), 2013 Fourth International Conference on},
doi = {10.1109/ICCCNT.2013.6726496},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Kavar, Parmar/Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Structure/Kavar, Parmar - 2013 - Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Stru.pdf:pdf},
keywords = {- page replacement,augmentation,data structure,least recently used,weighting replacement policy},
pages = {1--5},
publisher = {IEEE},
title = {{Improve the Performance of LRU Page Replacement Algorithm using Augmentation of Data Structure}},
year = {2013}
}
@inproceedings{Jantz2013,
>>>>>>> saucers
address = {New York},
author = {Jantz, Michael R. and Strickland, Carl and Kumar, Karthik and Dimitrov, Martin and Doshi, Kshitij A.},
booktitle = {VEE '13 Proceedings of the 9th ACM SIGPLAN/SIGOPS international conference on Virtual execution environments},
doi = {10.1145/2451512.2451543},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Jantz et al/A framework for application guidance in virtual memory systems/Jantz et al. - 2013 - A framework for application guidance in virtual memory systems.pdf:pdf},
isbn = {978-1-4503-1266-0},
keywords = {containerization,memory management,memory virtualization,performance,power,re-,source allocation},
pages = {155--166},
publisher = {ACM},
title = {{A framework for application guidance in virtual memory systems}},
year = {2013}
}
@inproceedings{Babaoglu1981,
address = {New York},
author = {Babaoglu, \"{O}zalp and Joy, William},
booktitle = {SOSP '81 Proceedings of the eighth ACM symposium on Operating systems principles},
doi = {10.1145/800216.806595},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Babaoglu, Joy/Converting a swap-based system to do paging in an architecture lacking page-referenced bits/Babaoglu, Joy - 1981 - Converting a swap-based system to do paging in an architecture lacking page-referenced bits.pdf:pdf},
isbn = {0-89791-062-1},
issn = {01635980},
number = {5},
pages = {78--86},
publisher = {ACM},
title = {{Converting a swap-based system to do paging in an architecture lacking page-referenced bits}},
volume = {15},
year = {1981}
}
@inproceedings{Rajwar2005,
abstract = {Writing concurrent programs is difficult because of the complexity of ensuring proper synchronization. Conventional lock-based synchronization suffers from well-known limitations, so researchers have considered nonblocking transactions as an alternative. Recent hardware proposals have demonstrated how transactions can achieve high performance while not suffering limitations of lock-based mechanisms. However, current hardware proposals require programmers to be aware of platform-specific resource limitations such as buffer sizes, scheduling quanta, as well as events such as page faults, and process migrations. If the transactional model is to gain wide acceptance, hardware support for transactions must be virtualized to hide these limitations in much the same way that virtual memory shields the programmer from platform-specific limitations of physical memory. This paper proposes virtual transactional memory (VTM), a user-transparent system that shields the programmer from various platform-specific resource limitations. VTM maintains the performance advantage of hardware transactions, incurs low overhead in time, and has modest costs in hardware support. While many system-level challenges remain, VTM takes a step toward making transactional models more widely acceptable.},
author = {Rajwar, Ravi and Herlihy, Maurice and Lai, Konrad},
booktitle = {ISCA '05 Proceedings of the 32nd annual international symposium on Computer Architecture},
doi = {10.1109/ISCA.2005.54},
file = {:E$\backslash$:/Documents/eBooks/mendeley/Rajwar, Herlihy, Lai/Virtualizing Transactional Memory/Rajwar, Herlihy, Lai - 2005 - Virtualizing Transactional Memory.pdf:pdf},
isbn = {076952270X},
issn = {10636897},
pages = {494--505},
title = {{Virtualizing Transactional Memory}},
year = {2005}
}
